// Mocks generated by Mockito 5.3.2 from annotations
// in submission/test/data/repositories/movie_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:submission/data/sources/local/movie_local_source.dart' as _i6;
import 'package:submission/data/sources/server/movie_server_source.dart' as _i3;
import 'package:submission/domain/entities/movie.dart' as _i5;
import 'package:submission/domain/entities/movie_detail.dart' as _i2;
import 'package:submission/domain/entities/movie_watchlist.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeMovieDetail_0 extends _i1.SmartFake implements _i2.MovieDetail {
  _FakeMovieDetail_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MovieServerSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieServerSource extends _i1.Mock implements _i3.MovieServerSource {
  MockMovieServerSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.MovieDetail> getMovieDetail(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getMovieDetail,
          [id],
        ),
        returnValue: _i4.Future<_i2.MovieDetail>.value(_FakeMovieDetail_0(
          this,
          Invocation.method(
            #getMovieDetail,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.MovieDetail>);
  @override
  _i4.Future<List<_i5.Movie>> getRecommendedMovies(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRecommendedMovies,
          [id],
        ),
        returnValue: _i4.Future<List<_i5.Movie>>.value(<_i5.Movie>[]),
      ) as _i4.Future<List<_i5.Movie>>);
  @override
  _i4.Future<List<_i5.Movie>> getNowPlayingMovies() => (super.noSuchMethod(
        Invocation.method(
          #getNowPlayingMovies,
          [],
        ),
        returnValue: _i4.Future<List<_i5.Movie>>.value(<_i5.Movie>[]),
      ) as _i4.Future<List<_i5.Movie>>);
  @override
  _i4.Future<List<_i5.Movie>> getPopularMovies() => (super.noSuchMethod(
        Invocation.method(
          #getPopularMovies,
          [],
        ),
        returnValue: _i4.Future<List<_i5.Movie>>.value(<_i5.Movie>[]),
      ) as _i4.Future<List<_i5.Movie>>);
  @override
  _i4.Future<List<_i5.Movie>> getTopRatedMovies() => (super.noSuchMethod(
        Invocation.method(
          #getTopRatedMovies,
          [],
        ),
        returnValue: _i4.Future<List<_i5.Movie>>.value(<_i5.Movie>[]),
      ) as _i4.Future<List<_i5.Movie>>);
  @override
  _i4.Future<List<_i5.Movie>> searchMovies(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchMovies,
          [query],
        ),
        returnValue: _i4.Future<List<_i5.Movie>>.value(<_i5.Movie>[]),
      ) as _i4.Future<List<_i5.Movie>>);
}

/// A class which mocks [MovieLocalSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieLocalSource extends _i1.Mock implements _i6.MovieLocalSource {
  MockMovieLocalSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<String> insertWatchlist(_i7.MovieWatchlist? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertWatchlist,
          [movie],
        ),
        returnValue: _i4.Future<String>.value(''),
      ) as _i4.Future<String>);
  @override
  _i4.Future<String> removeWatchlist(_i7.MovieWatchlist? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeWatchlist,
          [movie],
        ),
        returnValue: _i4.Future<String>.value(''),
      ) as _i4.Future<String>);
  @override
  _i4.Future<_i7.MovieWatchlist?> getWatchlist(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getWatchlist,
          [id],
        ),
        returnValue: _i4.Future<_i7.MovieWatchlist?>.value(),
      ) as _i4.Future<_i7.MovieWatchlist?>);
  @override
  _i4.Future<List<_i7.MovieWatchlist>> getAllWatchlist() => (super.noSuchMethod(
        Invocation.method(
          #getAllWatchlist,
          [],
        ),
        returnValue:
            _i4.Future<List<_i7.MovieWatchlist>>.value(<_i7.MovieWatchlist>[]),
      ) as _i4.Future<List<_i7.MovieWatchlist>>);
}
