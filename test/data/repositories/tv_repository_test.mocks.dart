// Mocks generated by Mockito 5.3.2 from annotations
// in submission/test/data/repositories/tv_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:submission/data/sources/local/watchlist_local_source.dart'
    as _i6;
import 'package:submission/data/sources/server/tv_server_source.dart' as _i3;
import 'package:submission/domain/entities/tv.dart' as _i5;
import 'package:submission/domain/entities/tv_detail.dart' as _i2;
import 'package:submission/domain/entities/watchlist.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeTvDetail_0 extends _i1.SmartFake implements _i2.TvDetail {
  _FakeTvDetail_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TvServerSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvServerSource extends _i1.Mock implements _i3.TvServerSource {
  MockTvServerSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.TvDetail> getTvDetail(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getTvDetail,
          [id],
        ),
        returnValue: _i4.Future<_i2.TvDetail>.value(_FakeTvDetail_0(
          this,
          Invocation.method(
            #getTvDetail,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.TvDetail>);
  @override
  _i4.Future<List<_i5.Tv>> getRecommendedTv(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getRecommendedTv,
          [id],
        ),
        returnValue: _i4.Future<List<_i5.Tv>>.value(<_i5.Tv>[]),
      ) as _i4.Future<List<_i5.Tv>>);
  @override
  _i4.Future<List<_i5.Tv>> getOnAirTv() => (super.noSuchMethod(
        Invocation.method(
          #getOnAirTv,
          [],
        ),
        returnValue: _i4.Future<List<_i5.Tv>>.value(<_i5.Tv>[]),
      ) as _i4.Future<List<_i5.Tv>>);
  @override
  _i4.Future<List<_i5.Tv>> getPopularTv() => (super.noSuchMethod(
        Invocation.method(
          #getPopularTv,
          [],
        ),
        returnValue: _i4.Future<List<_i5.Tv>>.value(<_i5.Tv>[]),
      ) as _i4.Future<List<_i5.Tv>>);
  @override
  _i4.Future<List<_i5.Tv>> getTopRatedTv() => (super.noSuchMethod(
        Invocation.method(
          #getTopRatedTv,
          [],
        ),
        returnValue: _i4.Future<List<_i5.Tv>>.value(<_i5.Tv>[]),
      ) as _i4.Future<List<_i5.Tv>>);
  @override
  _i4.Future<List<_i5.Tv>> searchTv(String? query) => (super.noSuchMethod(
        Invocation.method(
          #searchTv,
          [query],
        ),
        returnValue: _i4.Future<List<_i5.Tv>>.value(<_i5.Tv>[]),
      ) as _i4.Future<List<_i5.Tv>>);
}

/// A class which mocks [WatchlistLocalSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockWatchlistLocalSource extends _i1.Mock
    implements _i6.WatchlistLocalSource {
  MockWatchlistLocalSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<String> insertWatchlist(_i7.Watchlist? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertWatchlist,
          [movie],
        ),
        returnValue: _i4.Future<String>.value(''),
      ) as _i4.Future<String>);
  @override
  _i4.Future<String> removeWatchlist(_i7.Watchlist? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeWatchlist,
          [movie],
        ),
        returnValue: _i4.Future<String>.value(''),
      ) as _i4.Future<String>);
  @override
  _i4.Future<_i7.Watchlist?> getWatchlist(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getWatchlist,
          [id],
        ),
        returnValue: _i4.Future<_i7.Watchlist?>.value(),
      ) as _i4.Future<_i7.Watchlist?>);
  @override
  _i4.Future<List<_i7.Watchlist>> getAllWatchlist() => (super.noSuchMethod(
        Invocation.method(
          #getAllWatchlist,
          [],
        ),
        returnValue: _i4.Future<List<_i7.Watchlist>>.value(<_i7.Watchlist>[]),
      ) as _i4.Future<List<_i7.Watchlist>>);
}
