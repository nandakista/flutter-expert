// Mocks generated by Mockito 5.3.2 from annotations
// in submission/test/ui/views/tv_detail/view/tv_detail_view_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i11;
import 'dart:ui' as _i12;

import 'package:mockito/mockito.dart' as _i1;
import 'package:submission/core/constant/network_state.dart' as _i9;
import 'package:submission/domain/entities/tv.dart' as _i10;
import 'package:submission/domain/entities/tv_detail.dart' as _i7;
import 'package:submission/domain/usecases/get_detail_tv.dart' as _i2;
import 'package:submission/domain/usecases/get_recommended_tv.dart' as _i3;
import 'package:submission/domain/usecases/get_watchlist_tv_exist_status.dart'
    as _i4;
import 'package:submission/domain/usecases/remove_watchlist_tv.dart' as _i6;
import 'package:submission/domain/usecases/save_watchlist_tv.dart' as _i5;
import 'package:submission/ui/views/tv_detail/tv_detail_provider.dart' as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGetDetailTv_0 extends _i1.SmartFake implements _i2.GetDetailTv {
  _FakeGetDetailTv_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetRecommendedTv_1 extends _i1.SmartFake
    implements _i3.GetRecommendedTv {
  _FakeGetRecommendedTv_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetWatchlistTvExistStatus_2 extends _i1.SmartFake
    implements _i4.GetWatchlistTvExistStatus {
  _FakeGetWatchlistTvExistStatus_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSaveWatchlistTv_3 extends _i1.SmartFake
    implements _i5.SaveWatchlistTv {
  _FakeSaveWatchlistTv_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRemoveWatchlistTv_4 extends _i1.SmartFake
    implements _i6.RemoveWatchlistTv {
  _FakeRemoveWatchlistTv_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTvDetail_5 extends _i1.SmartFake implements _i7.TvDetail {
  _FakeTvDetail_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TvDetailProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvDetailProvider extends _i1.Mock implements _i8.TvDetailProvider {
  MockTvDetailProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GetDetailTv get getDetailTv => (super.noSuchMethod(
        Invocation.getter(#getDetailTv),
        returnValue: _FakeGetDetailTv_0(
          this,
          Invocation.getter(#getDetailTv),
        ),
      ) as _i2.GetDetailTv);
  @override
  _i3.GetRecommendedTv get getRecommendationsTv => (super.noSuchMethod(
        Invocation.getter(#getRecommendationsTv),
        returnValue: _FakeGetRecommendedTv_1(
          this,
          Invocation.getter(#getRecommendationsTv),
        ),
      ) as _i3.GetRecommendedTv);
  @override
  _i4.GetWatchlistTvExistStatus get getWatchlistExist => (super.noSuchMethod(
        Invocation.getter(#getWatchlistExist),
        returnValue: _FakeGetWatchlistTvExistStatus_2(
          this,
          Invocation.getter(#getWatchlistExist),
        ),
      ) as _i4.GetWatchlistTvExistStatus);
  @override
  _i5.SaveWatchlistTv get saveWatchlist => (super.noSuchMethod(
        Invocation.getter(#saveWatchlist),
        returnValue: _FakeSaveWatchlistTv_3(
          this,
          Invocation.getter(#saveWatchlist),
        ),
      ) as _i5.SaveWatchlistTv);
  @override
  _i6.RemoveWatchlistTv get removeWatchlist => (super.noSuchMethod(
        Invocation.getter(#removeWatchlist),
        returnValue: _FakeRemoveWatchlistTv_4(
          this,
          Invocation.getter(#removeWatchlist),
        ),
      ) as _i6.RemoveWatchlistTv);
  @override
  String get message => (super.noSuchMethod(
        Invocation.getter(#message),
        returnValue: '',
      ) as String);
  @override
  _i9.RequestState get detailState => (super.noSuchMethod(
        Invocation.getter(#detailState),
        returnValue: _i9.RequestState.initial,
      ) as _i9.RequestState);
  @override
  _i7.TvDetail get detailTv => (super.noSuchMethod(
        Invocation.getter(#detailTv),
        returnValue: _FakeTvDetail_5(
          this,
          Invocation.getter(#detailTv),
        ),
      ) as _i7.TvDetail);
  @override
  _i9.RequestState get recommendationState => (super.noSuchMethod(
        Invocation.getter(#recommendationState),
        returnValue: _i9.RequestState.initial,
      ) as _i9.RequestState);
  @override
  List<_i10.Tv> get recommendedTv => (super.noSuchMethod(
        Invocation.getter(#recommendedTv),
        returnValue: <_i10.Tv>[],
      ) as List<_i10.Tv>);
  @override
  String get watchlistMessage => (super.noSuchMethod(
        Invocation.getter(#watchlistMessage),
        returnValue: '',
      ) as String);
  @override
  bool get hasAddedToWatchlist => (super.noSuchMethod(
        Invocation.getter(#hasAddedToWatchlist),
        returnValue: false,
      ) as bool);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  _i11.Future<void> loadTvDetail(int? id) => (super.noSuchMethod(
        Invocation.method(
          #loadTvDetail,
          [id],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);
  @override
  _i11.Future<void> loadRecommendedTv(int? id) => (super.noSuchMethod(
        Invocation.method(
          #loadRecommendedTv,
          [id],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);
  @override
  _i11.Future<void> addWatchlist(_i7.TvDetail? tv) => (super.noSuchMethod(
        Invocation.method(
          #addWatchlist,
          [tv],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);
  @override
  _i11.Future<void> removeFromWatchlist(_i7.TvDetail? tv) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeFromWatchlist,
          [tv],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);
  @override
  _i11.Future<void> loadWatchlistExistStatus(int? id) => (super.noSuchMethod(
        Invocation.method(
          #loadWatchlistExistStatus,
          [id],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);
  @override
  void addListener(_i12.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i12.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
