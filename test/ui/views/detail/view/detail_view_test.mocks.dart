// Mocks generated by Mockito 5.3.2 from annotations
// in submission/test/ui/views/detail/view/detail_view_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;
import 'dart:ui' as _i9;

import 'package:mockito/mockito.dart' as _i1;
import 'package:submission/core/constant/network_state.dart' as _i6;
import 'package:submission/domain/entities/movie.dart' as _i7;
import 'package:submission/domain/entities/movie_detail.dart' as _i4;
import 'package:submission/domain/usecases/get_detail_movie.dart' as _i2;
import 'package:submission/domain/usecases/get_recommended_movies.dart' as _i3;
import 'package:submission/ui/views/detail/detail_provider.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGetDetailMovie_0 extends _i1.SmartFake
    implements _i2.GetDetailMovie {
  _FakeGetDetailMovie_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetRecommendedMovies_1 extends _i1.SmartFake
    implements _i3.GetRecommendedMovies {
  _FakeGetRecommendedMovies_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMovieDetail_2 extends _i1.SmartFake implements _i4.MovieDetail {
  _FakeMovieDetail_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDetailProvider_3 extends _i1.SmartFake
    implements _i5.DetailProvider {
  _FakeDetailProvider_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [DetailProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockDetailProvider extends _i1.Mock implements _i5.DetailProvider {
  MockDetailProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GetDetailMovie get getDetailMovie => (super.noSuchMethod(
        Invocation.getter(#getDetailMovie),
        returnValue: _FakeGetDetailMovie_0(
          this,
          Invocation.getter(#getDetailMovie),
        ),
      ) as _i2.GetDetailMovie);
  @override
  _i3.GetRecommendedMovies get getRecommendationsMovies => (super.noSuchMethod(
        Invocation.getter(#getRecommendationsMovies),
        returnValue: _FakeGetRecommendedMovies_1(
          this,
          Invocation.getter(#getRecommendationsMovies),
        ),
      ) as _i3.GetRecommendedMovies);
  @override
  String get message => (super.noSuchMethod(
        Invocation.getter(#message),
        returnValue: '',
      ) as String);
  @override
  _i6.NetworkState get detailState => (super.noSuchMethod(
        Invocation.getter(#detailState),
        returnValue: _i6.NetworkState.initial,
      ) as _i6.NetworkState);
  @override
  _i4.MovieDetail get detailMovie => (super.noSuchMethod(
        Invocation.getter(#detailMovie),
        returnValue: _FakeMovieDetail_2(
          this,
          Invocation.getter(#detailMovie),
        ),
      ) as _i4.MovieDetail);
  @override
  _i6.NetworkState get recommendationState => (super.noSuchMethod(
        Invocation.getter(#recommendationState),
        returnValue: _i6.NetworkState.initial,
      ) as _i6.NetworkState);
  @override
  List<_i7.Movie> get recommendedMovies => (super.noSuchMethod(
        Invocation.getter(#recommendedMovies),
        returnValue: <_i7.Movie>[],
      ) as List<_i7.Movie>);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  _i5.DetailProvider init(int? id) => (super.noSuchMethod(
        Invocation.method(
          #init,
          [id],
        ),
        returnValue: _FakeDetailProvider_3(
          this,
          Invocation.method(
            #init,
            [id],
          ),
        ),
      ) as _i5.DetailProvider);
  @override
  _i8.Future<void> loadMovieDetail(int? id) => (super.noSuchMethod(
        Invocation.method(
          #loadMovieDetail,
          [id],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
  @override
  _i8.Future<void> loadRecommendedMovie(int? id) => (super.noSuchMethod(
        Invocation.method(
          #loadRecommendedMovie,
          [id],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
  @override
  void addListener(_i9.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i9.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
